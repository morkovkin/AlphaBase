package ru.egor.database.alphabase.util

import com.google.gson.Gson
import ru.egor.database.alphabase.data.raw.RawAddress
import ru.egor.database.alphabase.data.raw.RawCompany
import ru.egor.database.alphabase.data.raw.RawContact
import java.io.File
import java.util.regex.Matcher
import java.util.regex.Pattern

object Export {
    @JvmStatic
    fun main(args: Array<String>) {
        exportAll()
    }

    private fun exportAll() {
        val dataDir = File("data")
        dataDir.delete()
        dataDir.mkdirs()
        val gson = Gson()
        exportContacts(dataDir, gson)
        exportAddress(dataDir, gson)
        exportCompany(dataDir, gson)
//        exportCompanyContact(dataDir, gson)
        exportContract(dataDir, gson)
    }

    private fun exportContacts(src: File, gson: Gson) {

        val insertSql =
            "INSERT INTO `contact` VALUES (1,'89999999900','Игорь Николавеч','1@mail.com'),(2,'89999999901','Антон Евгенич','2@mail.com'),(3,'','Тер-Ованесов Филипп Евгеньевич',''),(4,'89999999902','Игорь Прокапенко','3@mail.com'),(5,'','Фокин Виктор Александрович',''),(6,'89999999903','Папа Римский','4@mail.com'),(7,'','Новиков Михаил Алексеевич',''),(8,'89999999904','Арсений Юрьевич','5@mail.com'),(9,'','Султанова Анна Валериевна',''),(10,'89999999905','Данат Александрович','6@mail.com'),(11,'','Рионкон Де Вриз Луис Анхель',''),(12,'89999999906','Муравей Вася','7@mail.com'),(13,'','Тараканов Михаил Юрьевич',''),(14,'89999999907','Оса Петя','8@mail.com'),(15,'','Кемцуров Гусенбег Гаджиевич',''),(16,'89999999908','Шмель Игорь','9@mail.com'),(17,'','Попов Максим Андреевич',''),(18,'89999999909','Азамат Айталиве','10@mail.com'),(19,'','Соловьева Юлия Владимировна',''),(20,'89999999910','Тимати','11@mail.com'),(21,'','Чернов Андрей Николаевич',''),(22,'89999999911','Джиган','12@mail.com'),(23,'','Минаева Наталья Владимировна',''),(24,'89999999912','Александр Рева','13@mail.com'),(25,'','Зюбан Наталья Викторовна',''),(26,'89999999913','Елена Левина','14@mail.com'),(27,'','Широкова Виктория Сергеевна',''),(28,'89999999914','Арет Хмелевский','15@mail.com'),(29,'','Кутузова Ольга Юрьевна',''),(30,'89999999915','Катя Куликова','16@mail.com'),(31,'','Шатов Сергей Сергеевич',''),(32,'89999999916','Кирил Воротников','17@mail.com'),(33,'','Ярославова Алена Сергеевна ',''),(34,'89999999917','Роман Денисов','18@mail.com'),(35,'','Крылов Павел Геннадьевич',''),(36,'89999999918','Арсений Арсеньевич','19@mail.com'),(37,'','Стальмаков Сергей Борисович ',''),(38,'89999999919','Лера Важинская','20@mail.com'),(39,'','Елистратов Максим Александрович',''),(40,'89999999920','Абоба','21@mail.com'),(41,'','Морозова Нина Евгеньевна',''),(42,'89999999921','Джери Корги','22@mail.com'),(43,'','Шендрик Лидия Александровна',''),(44,'89999999922','Дима Алексеев','23@mail.com'),(45,'','Булдин Андрей Николаевич',''),(46,'89999999923','Ирина Николаевна','24@mail.com'),(47,'','Каунов Роман Александрович',''),(48,'89999999924','Диниил Александрович','25@mail.com'),(49,'','Слепцова Александра Владимировна',''),(50,'89999999925','Константин Олегович','26@mail.com'),(51,'','Ширинбеков Рагим Ширинбекович',''),(52,'89999999926','Олег Константинович','27@mail.com'),(53,'','Бочков Юрий Вячеславович',''),(54,'89999999927','Борис но не Джонс','28@mail.com'),(55,'','Тамбиев Асхат Магомет-Аминович',''),(56,'89999999928','Николь Аврамович','29@mail.com'),(57,'','Степанова Анна Юрьевна',''),(58,'89999999929','Юлия Евгеньевна','30@mail.com'),(59,'','Насимов Равшан Рахматович',''),(60,'89999999930','Виктория Сергеевна','31@mail.com'),(61,'','Тарских Татьяна Викторовна ',''),(62,'89999999931','Огузок','32@mail.com'),(63,'','ХАТУОВ МУРАТ МАХАМЕДОВИЧ',''),(64,'89999999932','Алиса Артемовна','33@mail.com'),(65,'','Ходункова Светлана Федоровна',''),(66,'89999999933','Джо Байден','34@mail.com'),(67,'','Васильченко Нина Николаевна',''),(68,'89999999934','Алена Александровна','35@mail.com'),(69,'','Тер-Григорян Элиза Арменовна',''),(70,'89999999935','Пайпер Святославна','36@mail.com'),(71,'','Дзябенко Александр Валерьевич ',''),(72,'89999999936','Йенифер ','37@mail.com'),(73,'','Ливчин Артем Валерьевич','');\n"

        val data = fromString(insertSql) {
            val (id, phone, name, email) = it.group(1).split(",")
            RawContact(
                id.toInt(),
                phone.replace("'", ""),
                name.replace("'", ""),
                email.replace("'", "")
            )
        }

        val contactsFile = File(src, "contacts.json")
        contactsFile.delete()
        contactsFile.writeText(gson.toJson(data))
    }

    private fun exportAddress(src: File, gson: Gson) {
        val insertSql =
            "INSERT INTO `address` VALUES (1,'117041, г.Москва, пос.Сосенское, п.Коммунарка, ул. Потаповскя роща, д.10, к.2, подвал, оф.1'),(2,'115054, г.Москва, ул. Пионерская Б., д. 15,стр.1,этаж1, пом.II,офис 5х'),(3,'121615, г. Москва, Рублёвское ш., д. 22, корп. 2, эт. 5, пом. LXV, к 5'),(4,'125481, Москва, ул. Фомичёвой, д. 16, корп. 3, этаж 1, пом.252, оф 5р '),(5,'142784, г. Москва, г. Московский, ул.Московская, д. 3, пом.I, каб.6, офис 101'),(6,'105077, г.Москва, Первомайская Средняя ул.,дом 23, подвал №0, офис 9'),(7,'109428, Москва, ул. Зарайская д.19, пом 2п, оф.4р'),(8,'115088, Москва г, 2-я Машиностроения ул., д. 25, стр. 5, эт. 4, пом. 1, ком. 25, оф. 34'),(9,'105066, Москва, Доброслободская ул., д. 7_1, стр. 3, эт. 2, пом. I'),(10,'105077, Москва, Первомайская Средняя ул, д.23, подвал №0, офис 20'),(11,'121069, Москва, ул. Поварская, д. 31_29, этаж п, пом. VI, комната 9 офис 49'),(12,'129090, г.Москва, ул.Большая Спасская, д.8, этаж 1, пом.51, оф.2к'),(13,'107014, Москва, ул. Егерская, д.1, эт. 1, пом. IIIа - ком. 4,5, офис 8'),(14,'117041, Москва г, Адмирала Руднева ул., д. 4, эт. 6, пом. 31'),(15,'111396, Москва, Союзный просп, д.22, этаж 1, пом XVII, комната 3, офис 15'),(16,'127006, г.Москва, ул. Краснопролетарская, д.7, этаж Подвал № 1, офис 103'),(17,'108801, Москва, пос. Сосенское, п. Коммунарка, ул. Потаповская роща, д. 10, к. 2, подвал, офис 24'),(18,'117623, Москва, ул. Талалихина, д. 41, стр.9, этаж 6, офис 100'),(19,'129327, г.Москва, ул.Коминтерна, д.20_2, пом. 1, комната 3, РМ 7А '),(20,'125212, Москва, Ленинградское шоссе, д. 22, этаж 1, пом. III, ком. 1, офис 3б'),(21,'127055, г.Москва,ул.Новослободская,д.67_69,этаж1,пом.VIII,оф.4н'),(22,'108814, г. Москва, пос. Сосенское, б-р Веласкеса, д. 2, этаж 1, пом.22, офис 4 '),(23,'125212, Москва, Ленинградское шоссе, д. 22, этаж 1, пом. III, к 2,оф 1б'),(24,'115573, ул. Мусы Джалиля, д.26, корп. 1, этаж 1, помещение II - комната 3, оф. 29'),(25,'121609, г. Москва, ул. Осенняя, д. 17, корп. 1, этаж 6, пом. I, комната 146'),(26,'125424, г.Москва, ул. Лётная, д.99, строение 3,этаж 2, помещение XXX. Офис 67'),(27,'125424, г.Москва, ул. Лётная, д.99, строение 3,этаж 2, помещение XXX. Офис 35'),(28,'125424, г.Москва, ул. Лётная, д.99, строение 3,этаж 2, помещение XXX. Офис 2'),(29,'105077, г.Москва, Первомайская Средняя ул.,дом 23, подвал №0, офис 52'),(30,'105077, г.Москва, Первомайская Средняя ул.,дом 23, подвал №0, офис 53'),(31,'111396, Москва, Союзный просп, д.22, этаж 1, пом XVII, комната 3, оф 8'),(32,'109316, город Москва, ул Талалихина, д. 41 стр. 9, помещ. 7н_6 офис 302'),(33,'115573, ул. Мусы Джалиля, д.26, корп. 1, этаж 1, помещение II - комната 3, офис 23'),(34,'108827, г. Москва, пос. Сосенское, ул. Сервантеса, д. 1, корп. 4, этаж 1, пом 3, офис 18'),(35,'117041, г.Москва, пос.Сосенское, п.Коммунарка, ул. Потаповскя роща, д.18, к.2, подвал, оф.25'),(36,'108801, г. Москва, пос. Сосенское, п. Коммунарка, ул. Потаповская роща, д. 18, корп. 2, подвал, оф 4'),(37,'105077, г.Москва, Первомайская Средняя ул.,дом 23, подвал №0, офис 45');\n"

        val items = fromString(insertSql) {
            val res = it.group(1)
            val address = res.substring(res.indexOf("'"), res.lastIndexOf("'")).replace("'", "")
            val id = res.replace(address, "").replace(",", "").replace("'", "").replace(" ", "")
            RawAddress(id.toInt(), address)
        }

        val contactsFile = File(src, "addresses.json")
        if (contactsFile.exists())
            contactsFile.delete()
        contactsFile.createNewFile()
        contactsFile.writeText(gson.toJson(items))
    }

    private fun exportCompany(src: File, gson: Gson) {
        val insertSql =
            "INSERT INTO `company` VALUES (1,7751209753,'51','ООО \\\"ЭлектроПлюс\\\"',NULL),(2,9705117244,'5','ООО \\\"ТОП МЕНЕДЖМЕНТ ГРУПП\\\"',3),(3,9731070850,'31','ООО \\\"Центр Промышленных Технологий\\\"',5),(4,7733365478,'33','АО \\\"Высота\\\"',7),(5,7728214177,'51','ООО \\\"Глобальные Технологии\\\"',9),(6,7719493213,'19','ООО \\\"КЛОВЕР ИНТЕРНЕЙШНЛ\\\"',11),(7,7708819079,'21','ООО \\\"ОПТ-ТРЕЙДИНГ\\\"',13),(8,7722497708,'22','ООО \\\"ПромТехСтрой\\\"',15),(9,7701799144,'1','ООО \\\"СЕТЬЭНЕРГОПРОЕКТ\\\"',17),(10,7719493608,'19','ООО \\\"МАКСИМУМ\\\"',19),(11,9704004103,'4','ООО \\\"ПРОМВОДСТРОЙ\\\"',21),(12,7708269097,'8','ООО \\\"ЭлектроСветоСервис плюс\\\"',23),(13,9718119665,'18','ООО \\\"КАМЕЛИЯ\\\"',25),(14,7727461920,'27БКГ','ООО \\\"Форстад\\\"',27),(15,7720766105,'20','ООО \\\"Белинка-Рус\\\"',29),(16,7707449516,'7','ООО \\\"Инвест-Лига\\\"',31),(17,7751214986,'51','ООО \\\"НЕПТУН\\\"',33),(18,7733309547,'22','ООО \\\"ДАЧНОЕ УПРАВЛЕНИЕ № 1\\\"',35),(19,7716946730,'16','ООО \\\"СФЕРА-П\\\"',37),(20,7743303985,'43','ООО \\\"РАСТВОРО БЕТОННЫЙ ЗАВОД\\\"',39),(21,7707696459,'7','ООО \\\"Теллур\\\"',41),(22,7751178061,'51','ООО \\\"ТехСнаб\\\"',43),(23,7743193764,'43','ООО ТД \\\"Центрполимерснаб\\\"',45),(24,7714469256,'24','ООО \\\"МОСТПРОМСТРОЙ\\\"',47),(25,7704865613,'31','ООО \\\"Умное облако\\\"',49),(26,7733369200,'33','ООО \\\"ТОРГ БАЗА\\\"',51),(27,7726393724,'33','ООО \\\"Техническая Платформа\\\"',53),(28,7725305972,'33','ООО \\\"ТРАНССТРОЙСЕРВИС\\\"',55),(29,7708290846,'19','ООО \\\"СИТИ-СТРОЙ\\\"',57),(30,2461225602,'19','ООО \\\"ПОЖСПЕЦСТРОЙ\\\"',59),(31,7720575340,'20','ООО \\\"Статико\\\"',61),(32,9722031406,'22','ООО \\\"Дамстрой-1\\\"',63),(33,9724024203,'24','ООО \\\"ЗООМИР\\\"',65),(34,7751190340,'51','ООО \\\"НОВОТЕХ\\\"',67),(35,7751208661,'51','ООО \\\"Гидроэнергетические решения\\\"',69),(36,7751190189,'51','ООО \\\"СТРОЙГАРАНТ\\\"',71),(37,7719889624,'19','ООО \\\"ХЕЛПОФИС\\\" ',73);\n"

        val data = fromString(insertSql) {
            val res = it.group(1)
            val (id, inn, ifns, name, fkOwner) = res.split(",")
            RawCompany(
                id.toInt(),
                inn.toLong(),
                ifns.replace("'", ""),
                name.replace("'", "").replace("\\", ""),
                if (fkOwner == "NULL") null else fkOwner.toInt()
            )
        }

        val contactsFile = File(src, "company.json")
        contactsFile.delete()
        contactsFile.writeText(gson.toJson(data))
    }

//    private fun exportCompanyContact(src: File, gson: Gson) {
//        val insertSql =
//            "INSERT INTO `company_contact` VALUES (1,1,1),(2,2,2),(3,3,4),(4,4,6),(5,5,8),(6,6,10),(7,7,12),(8,8,14),(9,9,16),(10,10,18),(11,11,20),(12,12,22),(13,13,24),(14,14,26),(15,15,28),(16,16,30),(17,17,32),(18,18,34),(19,19,36),(20,20,38),(21,21,40),(22,22,42),(23,23,44),(24,24,46),(25,25,48),(26,26,50),(27,27,52),(28,28,54),(29,29,56),(30,30,58),(31,31,60),(32,32,62),(33,33,64),(34,34,66),(35,35,68),(36,36,70),(37,37,72);\n"
//
//        val data = fromString(insertSql) {
//            val (id, fkCompany, fkContact) = it.group(1).split(",")
//            RawCompanyContact(id.toInt(), fkCompany.toInt(), fkContact.toInt())
//        }
//
//        val contactsFile = File(src, "company_contact.json")
//        contactsFile.delete()
//        contactsFile.writeText(gson.toJson(data))
//    }

    private fun exportContract(src: File, gson: Gson) {
        val insertSql =
            ""
        val contactsFile = File(src, "contract.json")
        contactsFile.delete()
        contactsFile.writeText("[]")

    }

    private fun <T> fromString(insertSql: String, mapper: (Matcher) -> T): MutableList<T> {
        val result = mutableListOf<T>()
        val regex = "(?<=\\()(.*?)(?=\\))"
        val re: Pattern = Pattern.compile(regex, Pattern.CASE_INSENSITIVE)

        val m: Matcher = re.matcher(insertSql)
        while (m.find()) {
            result.add(mapper(m))
        }
        return result
    }


}
